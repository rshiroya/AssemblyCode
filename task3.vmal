# Task 3: Array Sum
# Your goal for this task is to compute the sum of an array
# of integers.

# The array will be stored in memory
# The location of arr[0] is SP
# The location of arr[1] is SP+1
# The location of arr[2] is SP+2
# ... and so on

# The size of the array N will be stored in SP-1

# The sum of the array should be placed in location SP-2

# The SP register may be initialized to any value
2: 1024; # Initialize the SP register to 1024 (start of the array)
# ALL other non-constant registers will be initialized to 0
# regardless of any initializers you use.

[1023]: 8; # N = 8 - the array has 8 elements

[1024]: 1;  # arr[0] = 1
[1025]: -2; # arr[1] = -2
[1026]: 8;  # arr[2] = 8
[1027]: 12; # arr[3] = 12
[1028]: -5; # arr[4] = -5
[1029]: 0;  # arr[5] = 0
[1030]: 5;  # arr[6] = 5
[1031]: 3;  # arr[7] = 3

# For this example, the end value of memory location 1022 should be 22

# Goal:
#
#   [SP-2] = [SP] + [SP+1] + ... + [SP+[SP-1]-1]
#

# Start your code here
MV A, 2;
ADD A, 7;
SA A;
RD;
RB A;

MV D, 2;
ADD D, 7;

LBL LOOP;
NOT C, B;
ADD C, 6;
ADD C, A;

SF C;
BIZ END;

ADD D, 6;
SA D;
RD;
RB E;

ADD F, E;
MV 4, 2;
ADD 4, 7;
ADD 4, 7;


ADD B, 6;
GO LOOP;

LBL END;
MV 4, 2;
ADD 4, 7;
ADD 4, 7;
SW 4, F;